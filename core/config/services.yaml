# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"
      - "../src/Tests/"

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: "../src/Controller/"
    tags: ["controller.service_arguments"]

  dfm.recipe.workflow.service:
    class: App\Service\Workflow\RecipeWorkflow
  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  # user_provider:
  #   class: Symfony\Bridge\Doctrine\Security\User\EntityUserProvider
  #   arguments:
  #       - '@doctrine'
  #       - 'App\Entity\User'
  recipe.listener:
    class: App\EventListener\RecipeListener
    arguments: ["@security.helper"]
    tags:
      - { name: doctrine.event_listener, event: preUpdate }
      - { name: doctrine.event_listener, event: prePersist }
  dfm.user_provider:
    class: App\Security\UserProvider
  # App\Controller\Api\Recipe\CreateRecetteAction:
  #   arguments: ["@dfm.recipe.workflow.service"]
  #   tags: ["controller.service_arguments"]

  # App\Controller\Api\Recipe\EditRecetteAction:
  #   arguments:
  #     ["@doctrine.orm.default_entity_manager", "@dfm.recipe.workflow.service"]
  #   tags: ["controller.service_arguments"]

  # dfm.jwt_token_authenticator:
  #   class: App\Security\JWT\JwtTokenAuthenticator
  #   parent: lexik_jwt_authentication.security.jwt_authenticator
  # arguments: ['@dfm.user_provider']
  # arguments:
  #   - '@lexik_jwt_authentication.jwt_manager'
  #   - '@debug.event_dispatcher'
  #   - '@lexik_jwt_authentication.extractor.chain_extractor'
  #   - '@user_provider'
  #   - '@App\Repository\UserRepository'

  #dfm.on_authentifcation_successful:
  #  class: App\EventListener\LoginSuccessListener
  #  tag:
  #    - {name: kernel.event_listener, event: lexik_jwt_authentication.handler.authentication_success, , method: onLoginSuccess}
  'App\Doctrine\CurrentUserExtension':
    tags:
      - { name: api_platform.doctrine.orm.query_extension.collection }
      - { name: api_platform.doctrine.orm.query_extension.item }
